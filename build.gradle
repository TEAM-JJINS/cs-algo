plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id "org.sonarqube" version "6.0.1.5171"
    id 'checkstyle'
    id "io.sentry.jvm.gradle" version "5.6.0"
}

group = 'kr.co.csalgo'
version = '1.0.0-SNAPSHOT'

gradle.projectsEvaluated {
    println "Configured projects: ${rootProject.subprojects*.name}"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jacoco {
    toolVersion = "0.8.12"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = true
    }
}

sonar {
    properties {
        property "sonar.projectKey", "TEAM-JJINS_cs-algo"
        property "sonar.organization", "team-jjins"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/src/main/java/kr/co/csalgo/web/**/*"

        property "sonar.issue.ignore.multicriteria", "e1"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S00105"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "**/MailTemplate.java"
    }
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/checkstyle/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/checkstyle/naver-checkstyle-suppressions.xml"]
    toolVersion = "10.23.0"
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = true
        html.required = false
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group = 'kr.co.csalgo'
    version = '1.0.0-SNAPSHOT'

    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:8.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation 'com.github.codemonstur:embedded-redis:1.4.3'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:6.3.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-redis-spring:6.3.0'
    implementation 'org.apache.lucene:lucene-core:8.11.2'
    implementation 'org.apache.lucene:lucene-analyzers-nori:8.11.2'
}

tasks.named('test') {
    useJUnitPlatform()
}
